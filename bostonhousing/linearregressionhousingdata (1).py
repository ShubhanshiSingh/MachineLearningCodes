# -*- coding: utf-8 -*-
"""LinearRegressionhousingdata.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/100l56Hf3gI9793p_LQLM9e3e8tljV3Xx
"""

import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn import metrics
boston = pd.read_csv('/content/HousingData.csv')
boston.head()

boston.info()

boston.describe()



boston = boston.fillna(boston.mean())
boston

boston.plot.scatter('RM', 'MEDV')

plt.subplots(figsize = (12,8))
sns.heatmap(boston.corr(), cmap = 'RdGy')

sns.pairplot(boston, vars = ['LSTAT', 'PTRATIO', 'INDUS', 'TAX', 'CRIM', 'NOX', 'RAD', 'AGE', 'MEDV'])

sns.pairplot(boston, vars = ['RM', 'ZN', 'B', 'DIS', 'CHAS','MEDV'])

X = boston[['CRIM', 'ZN', 'INDUS', 'CHAS', 'NOX', 'RM', 'AGE', 'DIS', 'RAD', 'TAX',
       'PTRATIO', 'B', 'LSTAT']]
y = boston['MEDV']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.4)
lr = LinearRegression()
lr.fit(X_train, y_train)

predictions = lr.predict(X_test)
plt.scatter(y_test, predictions)
plt.xlabel('Y TEST')
plt.ylabel('PREDICTED Y')

print('MAE:', metrics.mean_absolute_error(y_test, predictions))
print('MSE:', metrics.mean_squared_error(y_test, predictions))
print('RMSE:', np.sqrt(metrics.mean_squared_error(y_test, predictions)))

"""MAE: 3.5802039771100516

MSE: 24.080573229678468

RMSE: 4.9071960659503375
"""

sns.distplot((y_test-predictions), bins = 50)

